# Generated by Django 4.1.5 on 2023-02-08 15:22

from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        ("auth", "0012_alter_user_first_name_max_length"),
    ]

    operations = [
        migrations.CreateModel(
            name="Chapter",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("associate_chapter_fg", models.BooleanField(default=True)),
                (
                    "greek_letter_assigned_txt",
                    models.CharField(max_length=15, null=True),
                ),
                ("chapter_school_txt", models.CharField(max_length=50)),
                ("city_state_txt", models.CharField(max_length=50)),
                ("original_founding_date", models.DateField()),
                ("recharter_date", models.DateField(blank=True, null=True)),
                (
                    "chapter_status_txt",
                    models.CharField(
                        choices=[("AC", "Active"), ("IN", "Inactive")],
                        default="AC",
                        max_length=2,
                    ),
                ),
                ("org_website_txt", models.CharField(max_length=50, null=True)),
                ("school_website_txt", models.CharField(max_length=50, null=True)),
            ],
        ),
        migrations.CreateModel(
            name="Industry",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("industry_txt", models.CharField(max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name="Position_Titles",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("position_title_txt", models.CharField(max_length=50)),
                ("active_fg", models.BooleanField(default=False)),
                ("e_board_fg", models.BooleanField(default=False)),
                ("description_txt", models.TextField(max_length=250)),
                (
                    "job_family_txt",
                    models.CharField(
                        choices=[
                            ("FI", "Finance"),
                            ("CS", "Community Service"),
                            ("FU", "Fundraising"),
                            ("SH", "Sisterhood"),
                            ("IN", "Intake"),
                            ("OP", "Operations"),
                            ("ED", "Education"),
                            ("RE", "Recruiting"),
                        ],
                        default="FI",
                        max_length=2,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Sister",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("first_name_txt", models.CharField(max_length=20)),
                ("last_name_txt", models.CharField(max_length=25)),
                ("nickname_txt", models.CharField(max_length=20)),
                ("nickname_meaning_txt", models.TextField(max_length=250)),
                (
                    "crossing_class_txt",
                    models.CharField(
                        choices=[
                            ("01", "Alpha"),
                            ("02", "Beta"),
                            ("03", "Gamma"),
                            ("04", "Delta"),
                            ("05", "Epsilon"),
                            ("06", "Zeta"),
                            ("07", "Eta"),
                            ("08", "Theta"),
                            ("09", "Iota"),
                            (10, "Lambda"),
                            (11, "Mu"),
                            (12, "Nu"),
                            (13, "Xi"),
                            (14, "Omicron"),
                            (15, "Pi"),
                            (16, "Rho"),
                            (17, "Sigma"),
                            (18, "Tau"),
                            (19, "Upsilon"),
                            (20, "Phi"),
                            (21, "Chi"),
                            (22, "Psi"),
                            (23, "Omega"),
                        ],
                        default=None,
                        max_length=2,
                    ),
                ),
                (
                    "crossing_date",
                    models.DateTimeField(default=None, verbose_name="crossing date"),
                ),
                (
                    "initiation_date",
                    models.DateTimeField(
                        default=None, verbose_name="PNM initiation date"
                    ),
                ),
                ("line_nb", models.IntegerField(null=True)),
                ("tree_txt", models.CharField(blank=True, max_length=20, null=True)),
                (
                    "status_txt",
                    models.CharField(
                        choices=[
                            ("AC", "Active"),
                            ("AL", "Alumnae"),
                            ("DE", "Deceased"),
                        ],
                        default="AC",
                        max_length=2,
                    ),
                ),
                ("current_city_txt", models.CharField(max_length=15, null=True)),
                ("current_state_txt", models.CharField(max_length=15, null=True)),
                ("current_country_txt", models.CharField(max_length=15, null=True)),
                ("email_address_txt", models.EmailField(max_length=30, null=True)),
                ("coach_fg", models.BooleanField(default=False)),
                (
                    "current_position_txt",
                    models.CharField(blank=True, max_length=30, null=True),
                ),
                (
                    "current_company_txt",
                    models.CharField(blank=True, max_length=20, null=True),
                ),
                (
                    "linkedin_url_txt",
                    models.CharField(blank=True, max_length=50, null=True),
                ),
                (
                    "summary_txt",
                    models.TextField(blank=True, max_length=250, null=True),
                ),
                (
                    "big_sister_nb",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="main_app.sister",
                    ),
                ),
                (
                    "chapter_nb",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="active_chapter",
                        to="main_app.chapter",
                    ),
                ),
                (
                    "crossing_chapter_nb",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="crossing_chapter",
                        to="main_app.chapter",
                    ),
                ),
                (
                    "expertise_interests_nb",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="main_app.industry",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Pnm",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("first_name_txt", models.CharField(max_length=20)),
                ("last_name_txt", models.CharField(max_length=25)),
                (
                    "big_sister_nb",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="main_app.sister",
                    ),
                ),
                (
                    "process_chapter_nb",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="process_chapter",
                        to="main_app.chapter",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Nickname_Request",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "req_date",
                    models.DateTimeField(
                        auto_created=True,
                        default=django.utils.timezone.now,
                        verbose_name="date requested",
                    ),
                ),
                (
                    "name_txt",
                    models.CharField(max_length=20, verbose_name="nickname request"),
                ),
                ("nickname_meaning_txt", models.TextField(max_length=250)),
                (
                    "nickname_approval_status_txt",
                    models.CharField(
                        choices=[
                            ("RE", "Requested"),
                            ("AP", "Approved"),
                            ("QU", "Queued"),
                            ("DE", "Denied"),
                        ],
                        default="RE",
                        max_length=2,
                        verbose_name="Nickname Approval Status",
                    ),
                ),
                (
                    "pnm_nb",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="main_app.pnm",
                    ),
                ),
                (
                    "requestor_nb",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="main_app.sister",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Member_Experiences",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("start_date", models.DateField()),
                ("end_date", models.DateField()),
                (
                    "chapter_nb",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="main_app.chapter",
                    ),
                ),
                (
                    "position_nb",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="main_app.position_titles",
                    ),
                ),
                (
                    "sister_nb",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="experiences",
                        to="main_app.sister",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Job_Opps_And_Referrals",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "pub_date",
                    models.DateTimeField(
                        auto_created=True,
                        default=django.utils.timezone.now,
                        verbose_name="date published",
                    ),
                ),
                ("job_title_txt", models.CharField(max_length=50)),
                ("company_name_txt", models.CharField(max_length=50)),
                ("job_link_txt", models.CharField(max_length=250)),
                ("remote_role_fg", models.BooleanField(default=False)),
                ("city_txt", models.CharField(max_length=15, null=True)),
                ("state_txt", models.CharField(max_length=15, null=True)),
                (
                    "level_of_opening_txt",
                    models.CharField(
                        choices=[
                            ("00", "Internship"),
                            ("01", "Entry"),
                            ("02", "Associate"),
                            ("03", "Analyst"),
                            ("04", "Specialist"),
                            ("05", "Manager"),
                            ("06", "Senior Manager"),
                            ("07", "Director"),
                            ("08", "Senior Director"),
                            ("09", "Executive"),
                        ],
                        default="00",
                        max_length=2,
                    ),
                ),
                ("description_txt", models.TextField(max_length=250)),
                (
                    "industry_nb",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="main_app.industry",
                    ),
                ),
                (
                    "poster_nb",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="main_app.sister",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="MyUser",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("password", models.CharField(max_length=128, verbose_name="password")),
                (
                    "last_login",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="last login"
                    ),
                ),
                (
                    "is_superuser",
                    models.BooleanField(
                        default=False,
                        help_text="Designates that this user has all permissions without explicitly assigning them.",
                        verbose_name="superuser status",
                    ),
                ),
                (
                    "first_name",
                    models.CharField(
                        blank=True, max_length=30, verbose_name="first name"
                    ),
                ),
                (
                    "last_name",
                    models.CharField(
                        blank=True, max_length=30, verbose_name="last name"
                    ),
                ),
                (
                    "email",
                    models.EmailField(
                        max_length=255, unique=True, verbose_name="email address"
                    ),
                ),
                (
                    "is_staff",
                    models.BooleanField(
                        default=False,
                        help_text="Designates whether the user can log into this admin site.",
                        verbose_name="staff status",
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(
                        default=True,
                        help_text="Designates whether this user should be treated as active.  Unselect this instead of deleting accounts.",
                        verbose_name="active",
                    ),
                ),
                (
                    "date_joined",
                    models.DateTimeField(
                        default=django.utils.timezone.now, verbose_name="date joined"
                    ),
                ),
                (
                    "is_verified",
                    models.BooleanField(
                        default=False,
                        help_text="Designates whether this user has completed the email verification process to allow login.",
                        verbose_name="verified",
                    ),
                ),
                (
                    "groups",
                    models.ManyToManyField(
                        blank=True,
                        help_text="The groups this user belongs to. A user will get all permissions granted to each of their groups.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.group",
                        verbose_name="groups",
                    ),
                ),
                (
                    "user_permissions",
                    models.ManyToManyField(
                        blank=True,
                        help_text="Specific permissions for this user.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.permission",
                        verbose_name="user permissions",
                    ),
                ),
            ],
            options={
                "verbose_name": "user",
                "verbose_name_plural": "users",
                "abstract": False,
            },
        ),
    ]
